/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <37 38 36 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE    &kp Q                 &kp W         &kp E         &kp R              &kp T        &kp Y      &kp U               &kp I                &kp O               &kp P      &kp BSPC
&kp TAB       &kp A                 &kp S         &kp D         &kp F              &kp G        &kp H      &kp J               &kp K                &kp L               &kp SEMI   &kp SQT
&kp LEFT_GUI  &HML RIGHT_CONTROL Z  &HML LA(B) X  &HML LCTRL C  &HML LEFT_SHIFT V  &kp B        &kp N      &HMR RIGHT_SHIFT M  &HMR RCTRL COMMA     &HMR RIGHT_ALT DOT  &kp SLASH  &kp DEL
                                                  &mo 2         &mo 1              &kp ENTER    &kp SPACE  &mo 3               &HMR RIGHT_GUI CLCK
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1    &kp N2          &kp N3     &kp N4      &kp N5         &kp N6           &kp N7            &kp N8             &kp N9                &kp N0                 &kp BSPC
&kp TILDE  &kp EXCL  &kp AT          &kp HASH   &kp DOLLAR  &kp PERCENT    &kp CARET        &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&trans     &kp PIPE  &kp UNDERSCORE  &kp MINUS  &kp EQUAL   &kp PLUS       &kp PRINTSCREEN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE
                                     &kp LGUI   &trans      &kp SPACE      &kp RET          &trans            &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F11     &kp F1  &kp F2            &kp F3      &kp F4            &kp F5             &kp F6          &kp F7             &kp F8           &kp F9     &kp F10       &kp PAGE_UP
&kp F12     &trans  &kp K_PLAY_PAUSE  &kp C_MUTE  &kp LG(C_VOL_DN)  &kp C_VOLUME_UP    &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT  &none         &kp PAGE_DOWN
&bt BT_CLR  &trans  &trans            &trans      &none             &none              &kp UNDER       &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans     &bt BT_SEL 0  &bt BT_SEL 1
                                      &kp LGUI    &trans            &kp SPACE          &kp RET         &trans             &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans        &trans            &trans        &trans     &trans          &trans    &trans          &trans    &trans        &trans     &trans  &trans
&trans        &kp LEFT_GUI      &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&kp LEFT_GUI  &kp LEFT_CONTROL  &kp RALT      &kp LCTRL  &kp LEFT_SHIFT  &trans    &trans          &trans    &trans        &trans     &trans  &trans
                                              &trans     &trans          &trans    &trans          &trans    &trans
            >;
        };
    };
};
